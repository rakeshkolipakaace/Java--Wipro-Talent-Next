Inheritance
-----------

The process of creating a new class from an existing class is called inheritance.

Extend keyword is used to create a new class from an existing class.

Syntax:


class  vechile{

}

class car extends vechile{

}

Through inheritance we can achieve reusability of code.


Java does not support multiple inheritance due to ambiguity means in java a class an extend only for one class.



Polymorphism
------------

Means many forms


Types :

1. Complile time

- Method overloading

2. Run time

- Method overriding



-method overloading
-------------------

Method name is same but the signature is different. signature => no.of arguments/type of arugements
                                      
                                       OR 

Method overloading is the process of defining multiple methods with the same name but different parameters.


- Applicable with in the same class as well as subclasses.


-method overriding
------------------

Method name is same and signature  is also same 

Applicable only in subclasses


Super reference
---------------

is used to refer to the base class memebers from derived class method.



Constructor in Inheritance
---------------------------

    Super () is the first statement added to every constructor implicitly which invokes base class default constructor.

    Example:

        class Parent {
    Parent() {
        System.out.println("Parent constructor called");
    }
}

class Child extends Parent {
    Child() {
        // super(); // <-- Implicitly added by the compiler
        System.out.println("Child constructor called");
    }
}

public class Main {
    public static void main(String[] args) {
        Child c = new Child();
    }
}

Output:

Parent constructor called   
Child constructor called

- To call parameterized constructor of base class from derived class constructor call it explicity.

- call to super() must be first statement in constructors



Encapsulation
-------------

The binding(wrapping) upof data memebers and methods together into a container called class and by providing security to data is called encapsulation.


Example: class Person{
    private int age;

    void method(int a){
        if(a>=18 && a<=60){
            age = a;
        }
        else{
            System.out.println("Invalid age");
        }

    }
}

Employee e = new Employee();

e.age=-20;//error

e.setAge(30);




Abstarct classes
----------------

Abstraction means hiding the details and showing only the important things.

A method that is declared but not defined (no body) is called an abstract method.



It is used to form the rules/specifications

- A method which is decalred  is calles abstract method.

- An abstract class contains zero or more abstract methods


abstract class vechile{
    abstract void drive();

    void applyBrakes(){
        System.out.println("Applying brakes");
    }
}

class car extends vechile{

    void drive(){
        System.out.println("Driving");
    }

    void changeGear(){
        System.out.println("Changing gear");
    }
}

public class Main {
    public static void main(String[] args) {
        vechile v = new car();
        v.drive();
        v.applyBrakes();

        car c = new car();
        c.changeGear();
    }
}